apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fitness-tracker.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fitness-tracker.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "fitness-tracker.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fitness-tracker.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fitness-tracker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.security.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.backend.repository }}:{{ .Values.image.backend.tag }}"
          imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV }}
            - name: PORT
              value: "3000"
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL }}
            - name: CORS_ORIGIN
              value: {{ .Values.env.CORS_ORIGIN }}
            - name: JWT_EXPIRES_IN
              value: {{ .Values.env.JWT_EXPIRES_IN }}
            - name: BCRYPT_ROUNDS
              value: {{ .Values.env.BCRYPT_ROUNDS | quote }}
            - name: RATE_LIMIT_WINDOW
              value: {{ .Values.env.RATE_LIMIT_WINDOW | quote }}
            - name: RATE_LIMIT_MAX
              value: {{ .Values.env.RATE_LIMIT_MAX | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "fitness-tracker.fullname" . }}-secrets
                  key: jwt-secret
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "fitness-tracker.fullname" . }}-secrets
                  key: session-secret
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}