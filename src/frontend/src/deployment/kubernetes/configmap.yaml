apiVersion: v1
kind: ConfigMap
metadata:
  name: fitness-tracker-config
  namespace: fitness-tracker
  labels:
    app.kubernetes.io/name: fitness-tracker
    app.kubernetes.io/component: config
data:
  
  # Application configuration
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "https://fitness.example.com"
  
  # Rate limiting
  RATE_LIMIT_WINDOW: "900000"
  RATE_LIMIT_MAX: "100"
  
  # Security
  BCRYPT_ROUNDS: "12"
  JWT_EXPIRES_IN: "24h"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: fitness-tracker
  labels:
    app.kubernetes.io/name: fitness-tracker
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
        limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        client_max_body_size 10M;

        # Gzip
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_comp_level 6;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        server_tokens off;

        upstream backend {
            server backend-service:3000;
        }

        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;

            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # API proxy
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://backend/;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 5s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }

            # Frontend
            location / {
                try_files $uri $uri/ /index.html;
            }

            # Static assets with caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }