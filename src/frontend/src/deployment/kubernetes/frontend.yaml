apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: fitness-tracker
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: web
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/component: web
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: frontend-assets
          mountPath: /usr/share/nginx/html
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
      initContainers:
      - name: build-frontend
        image: node:18-alpine
        command:
        - sh
        - -c
        - |
          cd /build
          npm ci
          npm run build
          cp -r dist/* /shared/
        volumeMounts:
        - name: source-code
          mountPath: /build
          readOnly: true
        - name: frontend-assets
          mountPath: /shared
        workingDir: /build
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: source-code
        configMap:
          name: frontend-source  # Created separately with source code
      - name: frontend-assets
        emptyDir: {}
      securityContext:
        fsGroup: 101

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: fitness-tracker
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: web
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: frontend